plot4 <- ggplot(data = loan_data_f4, aes(x = Income..USD., y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Income..USD.",
y = "Loan Sanction Amount USD")
combined_plot <- (plot1 | plot2) / (plot3 | plot4)
print(combined_plot)
plot1 <- ggplot(loan_data_f4, aes(Income..USD.))+
geom_histogram(bins=20,aes(y=..density..))
plot2 <- ggplot(loan_data_f4, aes(Credit.Score))+
geom_histogram(bins=20,aes(y=..density..))
plot3 <- ggplot(loan_data_f4, aes(Current.Loan.Expenses..USD.))+
geom_histogram(bins=20,aes(y=..density..))
plot4 <- ggplot(loan_data_f4, aes(Loan.Amount.Request..USD.))+
geom_histogram(bins=20,aes(y=..density..))
combined_plot <- (plot1 | plot2) / (plot3 | plot4)
print(combined_plot)
# Select only the specified numeric variables
selected_vars <- loan_data_f4[, c("Loan.Sanction.Amount..USD.",
"Income..USD.",
"Loan.Amount.Request..USD.",
"Current.Loan.Expenses..USD.",
"Credit.Score",
"Dependents")]
# Compute the correlation matrix
correlation_matrix <- cor(selected_vars, use = "complete.obs")
# Melt the correlation matrix for ggplot
melted_corr_matrix <- melt(correlation_matrix)
# Create the heatmap with labels
ggplot(data = melted_corr_matrix, aes(x = Var1, y = Var2, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
geom_text(aes(label = round(value, 2)), color = "black", size = 4) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(title = "Correlation Matrix Heatmap with Labels", x = "", y = "")
# Age -----------
# This variable has no linear relationship with Loan Sanction Amount
# Creating separate bins to overcome the linearity issue
loan_data_f4$AgeGroup <- cut(loan_data_f4$Age,
breaks = c(18, 30, 40, 50, 60, 70, Inf),
labels = c("18-30", "30-40", "40-50", "50-60", "60-70", "70+"),
include.lowest = TRUE)
#18-30: Includes all values ≥18 and <30.
#30-40: Includes all values ≥30 and <40.
#40-50: Includes all values ≥40 and <50.
#50-60: Includes all values ≥50 and <60.
#60-70: Includes all values ≥60 and <70.
#70+: Includes all values ≥70.
ggplot(data = loan_data_f4, aes(x = AgeGroup, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Independent Variable",
y = "Dependent Variable")
ggplot(data = loan_data_f4, aes(x = Age, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Independent Variable",
y = "Dependent Variable")
# Select only the specified numeric variables
selected_vars <- loan_data_f4[, c("Loan.Sanction.Amount..USD.",
"Income..USD.",
"Loan.Amount.Request..USD.",
"Current.Loan.Expenses..USD.",
"Credit.Score",
"Dependents",
"Age")]
# Compute the correlation matrix
correlation_matrix <- cor(selected_vars, use = "complete.obs")
# Melt the correlation matrix for ggplot
melted_corr_matrix <- melt(correlation_matrix)
# Create the heatmap with labels
ggplot(data = melted_corr_matrix, aes(x = Var1, y = Var2, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
geom_text(aes(label = round(value, 2)), color = "black", size = 4) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
# Select only the specified numeric variables
selected_vars <- loan_data_f4[, c("Loan.Sanction.Amount..USD.",
"Income..USD.",
"Loan.Amount.Request..USD.",
"Current.Loan.Expenses..USD.",
"Credit.Score",
"Dependents",
"Age")]
# Select only the specified numeric variables
selected_vars <- loan_data_f4[, c("Loan.Sanction.Amount..USD.",
"Income..USD.",
"Loan.Amount.Request..USD.",
"Current.Loan.Expenses..USD.",
"Credit.Score",
"Dependents",
"Age")]
# Compute the correlation matrix
correlation_matrix <- cor(selected_vars, use = "complete.obs")
# Melt the correlation matrix for ggplot
melted_corr_matrix <- melt(correlation_matrix)
# Create the heatmap with labels
ggplot(data = melted_corr_matrix, aes(x = Var1, y = Var2, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
geom_text(aes(label = round(value, 2)), color = "black", size = 4) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(title = "Correlation Matrix Heatmap with Labels", x = "", y = "")
ggplot(data = loan_data_f4, aes(x = Age, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Independent Variable",
y = "Dependent Variable")
ggplot(data = loan_data_f4, aes(x = Age, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Age",
y = "Dependent Variable")
ggplot(data = loan_data_f4, aes(x = Age, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Age",
y = "Dependent Variable")
ggplot(data = loan_data_f4, aes(x = Dependents, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Dependents",
y = "Dependent Variable")
ggplot(data = loan_data_f4, aes(x = Dependents, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Dependents",
y = "Loan Sanction Amount USD")
ggplot(data = loan_data_f4, aes(x = Age, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Age",
y = "Loan Sanction Amount USD")
plot1 <- ggplot(data = loan_data_f4, aes(x = Age, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Age",
y = "Loan Sanction Amount USD")
plot2 <- ggplot(data = loan_data_f4, aes(x = Dependents, y = Loan.Sanction.Amount..USD.)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatter Plot with Linear Fit",
x = "Dependents",
y = "Loan Sanction Amount USD")
combined_plot <- (plot1 | plot2)
print(combined_plot)
# model 1
model1 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD.
,data = loan_data_f11)
summary(model1)
plot(model1)
par(mfrow = c(2, 2))
model2 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender
,data = loan_data_f11)
summary(model2)
plot(model2)
model3 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender + Location
,data = loan_data_f11)
summary(model3)
plot(model3)
model4 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender + Location + Credit.Score
,data = loan_data_f11)
summary(model4)
plot(model4)
model5 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + AgeGroup
,data = loan_data_f11)
model6 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + AgeGroup + Income.Stability
,data = loan_data_f11)
summary(model6)
plot(model6)
# model 7
model7 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability
,data = loan_data_f11)
summary(model7)
plot(model7)
# model 8
model9 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults
,data = loan_data_f11)
summary(model8)
plot(model8)
model9 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD.  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant
,data = loan_data_f11)
summary(model9)
plot(model9)
model9 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD.  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant
,data = loan_data_f11)
summary(model9)
plot(model9)
durbinWatsonTest(model9)
jarque.bera.test(residuals(model9)) # H0: normal
# model 1
model1 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD.
,data = loan_data_f11)
summary(model1)
plot(model1)
# model 2
model2 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender
,data = loan_data_f11)
summary(model2)
plot(model2)
# model 3
model3 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender + Location
,data = loan_data_f11)
summary(model3)
plot(model3)
# model 4
model4 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender + Location + Credit.Score
,data = loan_data_f11)
summary(model4)
plot(model4)
# model 5
model5 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + AgeGroup
,data = loan_data_f11)
summary(model5)
plot(model5)
# model 6
model6 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + AgeGroup + Income.Stability
,data = loan_data_f11)
summary(model6)
plot(model6)
# model 7
model7 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability
,data = loan_data_f11)
summary(model7)
plot(model7)
# model 8
model9 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults
,data = loan_data_f11)
summary(model8)
plot(model8)
# model 9
model9 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD.  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant
,data = loan_data_f11)
summary(model9)
plot(model9)
loan_data_f10 <- loan_data_f9 %>%
mutate(
Dep_Low = ifelse(Dependents >= 0 & Dependents <= 2, 1, 0),
Dep_High = ifelse(Dependents >= 3, 1, 0)
)
counts <- loan_data_f10 %>%
summarise(
Low = sum(Dep_Low, na.rm = TRUE),
High = sum(Dep_High, na.rm = TRUE)
)
print(counts)
# model 1
model1 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD.
,data = loan_data_f11)
summary(model1)
plot(model1)
# model 2
model2 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender
,data = loan_data_f11)
summary(model2)
plot(model2)
# model 3
model3 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender + Location
,data = loan_data_f11)
summary(model3)
plot(model3)
# model 4
model4 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender + Location + Credit.Score
,data = loan_data_f11)
summary(model4)
plot(model4)
# model 5
model5 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + AgeGroup
,data = loan_data_f11)
summary(model5)
plot(model5)
# model 6
model6 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + AgeGroup + Income.Stability
,data = loan_data_f11)
summary(model6)
plot(model6)
# model 7
model7 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability
,data = loan_data_f11)
summary(model7)
plot(model7)
# model 8
model8 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_high
,data = loan_data_f11)
# model 8
model8 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High
,data = loan_data_f11)
summary(model8)
model8 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High
,data = loan_data_f11)
summary(model8)
plot(model8)
cooksd <- data.frame(cook = cooks.distance(model8))
cooksd$obs <- seq_along(cooksd$cook)
ggplot(cooksd) +
geom_bar(aes(x = obs, y = cook), stat = "identity", position = position_dodge()) +
geom_hline(yintercept = 4 * mean(cooksd$cook), color = 'red') +
geom_text(data = subset(cooksd, cook > 4 * mean(cooksd$cook)),
aes(obs, cook, label = obs), color = "blue") +
labs(title = "Cook's Distance", x = "Observation", y = "Cook's Distance")
loan_data_f11 <- cbind(loan_data_f11, cook = cooksd$cook)
loan_data_f11_cook <- loan_data_f11 %>%
filter(cook <= 4 * mean(cook))
duplicated(names(loan_data_f11))
loan_data_f11 <- loan_data_f11 %>% select(-cook)
which(names(loan_data_f11) == "cook")  # Get the positions of the 'cook' column
loan_data_f11 <- loan_data_f11[ , -which(names(loan_data_f11) == "cook")]
loan_data_f11_cook <- loan_data_f11 %>%
filter(cook <= 4 * mean(cook))
cooksd <- data.frame(cook = cooks.distance(model8))
cooksd$obs <- seq_along(cooksd$cook)
ggplot(cooksd) +
geom_bar(aes(x = obs, y = cook), stat = "identity", position = position_dodge()) +
geom_hline(yintercept = 4 * mean(cooksd$cook), color = 'red') +
geom_text(data = subset(cooksd, cook > 4 * mean(cooksd$cook)),
aes(obs, cook, label = obs), color = "blue") +
labs(title = "Cook's Distance", x = "Observation", y = "Cook's Distance")
loan_data_f11 <- cbind(loan_data_f11, cook = cooksd$cook)
loan_data_f11_cook <- loan_data_f11 %>%
filter(cook <= 4 * mean(cook))
model8_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High
,data = loan_data_f11_cook)
summary(model8_c)
plot(model8_c)
cooksd <- data.frame(cook = cooks.distance(model8_c))
cooksd$obs <- seq_along(cooksd$cook)
ggplot(cooksd) +
geom_bar(aes(x = obs, y = cook), stat = "identity", position = position_dodge()) +
geom_hline(yintercept = 4 * mean(cooksd$cook), color = 'red') +
geom_text(data = subset(cooksd, cook > 4 * mean(cooksd$cook)),
aes(obs, cook, label = obs), color = "blue") +
labs(title = "Cook's Distance", x = "Observation", y = "Cook's Distance")
model8 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High + Location
,data = loan_data_f11)
summary(model8)
plot(model8)
model8 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High + Location
,data = loan_data_f11_cook)
summary(model8)
plot(model8)
model8 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High
,data = loan_data_f11)
summary(model8)
plot(model8)
cooksd <- data.frame(cook = cooks.distance(model8_c))
cooksd$obs <- seq_along(cooksd$cook)
ggplot(cooksd) +
geom_bar(aes(x = obs, y = cook), stat = "identity", position = position_dodge()) +
geom_hline(yintercept = 4 * mean(cooksd$cook), color = 'red') +
geom_text(data = subset(cooksd, cook > 4 * mean(cooksd$cook)),
aes(obs, cook, label = obs), color = "blue") +
labs(title = "Cook's Distance", x = "Observation", y = "Cook's Distance")
model8_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High
,data = loan_data_f11_cook)
summary(model8_c)
plot(model8_c)
model8_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + Dep_High
,data = loan_data_f11_cook)
summary(model8_c)
plot(model8_c)
cooksd <- data.frame(cook = cooks.distance(model8_c))
cooksd$obs <- seq_along(cooksd$cook)
ggplot(cooksd) +
geom_bar(aes(x = obs, y = cook), stat = "identity", position = position_dodge()) +
geom_hline(yintercept = 4 * mean(cooksd$cook), color = 'red') +
geom_text(data = subset(cooksd, cook > 4 * mean(cooksd$cook)),
aes(obs, cook, label = obs), color = "blue") +
labs(title = "Cook's Distance", x = "Observation", y = "Cook's Distance")
which(names(loan_data_f11) == "cook")  # Get the positions of the 'cook' column
loan_data_f11 <- loan_data_f11[ , -which(names(loan_data_f11) == "cook")]
cooksd <- data.frame(cook=cooks.distance(model8))
cooksd$obs<-rownames(cooksd)
ggplot(cooksd)+
geom_bar(aes(x=obs, y=cook),stat = "identity",position=position_dodge())+
geom_hline(yintercept=4*mean(cooksd$cook), color=’red’)+
cooksd <- data.frame(cook=cooks.distance(model8))
cooksd$obs<-rownames(cooksd)
ggplot(cooksd)+
geom_bar(aes(x=obs, y=cook),stat = "identity",position=position_dodge())+
geom_hline(yintercept=4*mean(cooksd$cook), color='red')+
geom_text(data=subset(cooksd, cook > 4*mean(cooksd$cook)),
aes(obs,cook,label=obs))
loan_data_f11<-loan_data_f11(dat,cook=cooksd$cook)
loan_data_f11 <- loan_data_f11 %>%
mutate(cook = cooksd$cook)
loan_data_f11_cook <- loan_data_f11 %>%
filter(cook <= 4 * mean(cook))
model8_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + Dep_High
,data = loan_data_f11_cook)
summary(model8_c)
plot(model8_c)
model8 <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High
,data = loan_data_f11)
summary(model8)
plot_model8 <- plot(model8)
model8_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High
,data = loan_data_f11_cook)
summary(model8_c)
plot_model8c <- plot(model8_c)
combined_plot <- (plot1 | plot2)
print(combined_plot)
combined_plot <- (plot_model8 | plot_model8c)
print(combined_plot)
combined_plot <- (plot_model8 | plot_model8c)
print(combined_plot)
# Load necessary library
library(ggfortify)
install.packages("ggfortify")
model8_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High
,data = loan_data_f11_cook)
summary(model8_c)
plot_model8c <- plot(model8_c)
cooksd <- data.frame(cook=cooks.distance(model8_c))
cooksd$obs<-rownames(cooksd)
ggplot(cooksd)+
geom_bar(aes(x=obs, y=cook),stat = "identity",position=position_dodge())+
geom_hline(yintercept=4*mean(cooksd$cook), color='red')+
geom_text(data=subset(cooksd, cook > 4*mean(cooksd$cook)),
aes(obs,cook,label=obs))
cooksd <- data.frame(cook=cooks.distance(model8))
cooksd$obs<-rownames(cooksd)
ggplot(cooksd)+
geom_bar(aes(x=obs, y=cook),stat = "identity",position=position_dodge())+
geom_hline(yintercept=4*mean(cooksd$cook), color='red')+
geom_text(data=subset(cooksd, cook > 4*mean(cooksd$cook)),
aes(obs,cook,label=obs))
model8_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Gender  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + No..of.Defaults + Dep_High
,data = loan_data_f11_cook)
summary(model8_c)
model9_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD.  + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + Dep_High
,data = loan_data_f11_cook)
summary(model9_c)
plot_model8c <- plot(model8_c)
durbinWatsonTest(model8_c)
jarque.bera.test(residuals(model8_c))
durbinWatsonTest(model9_c)
vif(model9_c)
jarque.bera.test(residuals(model9_c)) # H0: normal
jarque.bera.test(residuals(model9_c)) # H0: normal
residuals_squared <- resid(model9_c)^2
loan_data_f11_cook$residuals_squared <- residuals_squared
# Fit the auxiliary regression for heteroscedasticity test
auxiliary_model <- lm(residuals_squared ~ Loan.Amount.Request..USD. +
I(Loan.Amount.Request..USD.^2) +
Credit.Score + I(Credit.Score^2) +
Income..USD. + I(Income..USD.^2) +
Income.Stability + Co.Applicant + Dep_High +
Loan.Amount.Request..USD. * Credit.Score +
Loan.Amount.Request..USD. * Income..USD. +
Credit.Score * Income..USD.,
data = loan_data_f11_cook)
# Output the R-squared value from the auxiliary regression
summary(auxiliary_model)$r.squared
# Output the R-squared value from the auxiliary regression
summary(auxiliary_model)
dwtest(model12)	# H0: no autocorrelation
bgtest(model12)	# H0: no autocorrelation
dwtest(model9_c)	# H0: no autocorrelation
bgtest(model9_c)	# H0: no autocorrelation
model9_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Income.USD. + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + Dep_High
,data = loan_data_f11_cook)
model9_c <- lm(Loan.Sanction.Amount..USD. ~ Loan.Amount.Request..USD. + Income..USD. + Credit.Score + Income..USD. + Income.Stability  + Co.Applicant + Dep_High
,data = loan_data_f11_cook)
summary(model9_c)
model9_c_log <- lm(
log(Loan.Sanction.Amount..USD.) ~
log(Loan.Amount.Request..USD.) +
log(Credit.Score) +
log(Income..USD.) +
Income.Stability +
Co.Applicant +
Dep_High,
data = loan_data_f11_cook
)
summary(model9_c_log)
plot(model9_c_log)
residuals_squared_log <- resid(model9_c_log)^2
loan_data_f11_cook$residuals_squared_log <- residuals_squared_log
auxiliary_model_log <- lm(residuals_squared_log ~
log(Loan.Amount.Request..USD.) +
I(log(Loan.Amount.Request..USD.)^2) +
log(Credit.Score) +
I(log(Credit.Score)^2) +
log(Income..USD.) +
I(log(Income..USD.)^2) +
Income.Stability +
Co.Applicant +
Dep_High +
log(Loan.Amount.Request..USD.) * log(Credit.Score) +
log(Loan.Amount.Request..USD.) * log(Income..USD.) +
log(Credit.Score) * log(Income..USD.),
data = loan_data_f11_cook)
summary(auxiliary_model_log)
