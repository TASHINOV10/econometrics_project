# Calculate the correlation matrix
cor_matrix <- cor(numeric_data, use = "complete.obs")
#Loading the data
loan_data <- read.csv('credit_amount.csv')
View(loan_data)
count_total <- nrow(loan_data)
print(count_total)
count_na <- sum(is.na(loan_data))
print(count_na)
pct_na <- count_na / count_total
print(pct_na)
#Na Values per columns
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
#Na Values per columns
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
#Filter by Credit.Score NA
filtered_df <- loan_data[is.na(loan_data$Credit.Score), ]
View(filtered_df)
na_percentage <- sum(is.na(filtered_df$Income.Stability)) / nrow(filtered_df) * 100
#Income stability Range
summary(loan_data[loan_data$Income.Stability == "Low", "Income..USD."])
summary(loan_data[loan_data$Income.Stability == "High", "Income..USD."])
table(loan_data$Has.Active.Credit.Card)
summary(loan_data[loan_data$Has.Active.Credit.Card == "Unpossessed", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Active", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Inactive", "Loan.Sanction.Amount..USD."])
summary(loan_data[is.na(loan_data$Has.Active.Credit.Card), "Loan.Sanction.Amount..USD."])
table(loan_data$Co.Applicant)
filtered_df <- loan_data[(loan_data$Credit.Score) = -999, ]
filtered_df <- loan_data[(loan_data$Credit.Score) <- -999, ]
filtered_df <- loan_data[(loan_data$Credit.Score)<- -999, ]
filtered_df <- loan_data[loan_data$Credit.Score = -999, ]
filtered_df <- loan_data[loan_data$Credit.Score == -999, ]
View(loan_data)
table(filtered_df$Co.Applicant)
filtered_df <- loan_data[loan_data$Credit.Score == -999, ]
table(filtered_df$Co.Applicant)
View(filtered_df)
table(loan_data$Co.Applicant)
filtered_df <- loan_data[loan_data$Credit.Score == "-999", ]
View(filtered_df)
filtered_df <- loan_data[loan_data$Credit.Score == '-999', ]
View(filtered_df)
loan_data$Dependents[is.na(loan_data$Dependents)] <- 0
unique_dependents <- unique(loan_data$Dependents)
print(unique_dependents)
count_zero_records <- sum(loan_data$Current.Loan.Expenses..USD == 0, na.rm = TRUE)
print(count_zero_records)
loan_data$Current.Loan.Expenses..USD[(loan_data$Current.Loan.Expenses..USD) == -999.0 ] <- 0
unique_dependents <- unique(loan_data$Current.Loan.Expenses..USD)
summary(loan_data$Current.Loan.Expenses..USD)
loan_data <- loan_data[!is.na(loan_data$Current.Loan.Expenses..USD)
loan_data <- loan_data[!is.na(loan_data$Income..USD.), ]
loan_data <- loan_data[!is.na(loan_data$Income..USD.), ]
summary(loan_data[loan_data$Has.Active.Credit.Card == "Unpossessed", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Active", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Inactive", "Loan.Sanction.Amount..USD."])
summary(loan_data[is.na(loan_data$Has.Active.Credit.Card), "Loan.Sanction.Amount..USD."])
loan_data$Has.Active.Credit.Card[is.na(loan_data$Has.Active.Credit.Card)] <- "Unknown"
table(loan_data$Has.Active.Credit.Card)
loan_data <- loan_data[(loan_data$Income..USD.) == 'Unknown', ]
table(loan_data$Has.Active.Credit.Card)
table(loan_data$Has.Active.Credit.Card)
loan_data <- loan_data[(loan_data$Income..USD.) == 'Unknown', ]
loan_data <- loan_data[(loan_data$Income..USD.) == 'Unknown', ]
View(loan_data)
loan_data <- read.csv('credit_amount.csv')
loan_data$Dependents[is.na(loan_data$Dependents)] <- 0
unique_dependents <- unique(loan_data$Dependents)
print(unique_dependents)
loan_data$Current.Loan.Expenses..USD[(loan_data$Current.Loan.Expenses..USD) == -999.0 ] <- 0
unique_dependents <- unique(loan_data$Current.Loan.Expenses..USD)
summary(loan_data$Current.Loan.Expenses..USD)
loan_data <- loan_data[!is.na(loan_data$Current.Loan.Expenses..USD), ]
loan_data <- loan_data[!is.na(loan_data$Income..USD.), ]
loan_data <- loan_data[(loan_data$Has.Active.Credit.Card) == 'Unknown', ]
View(loan_data)
loan_data <- read.csv('credit_amount.csv')
loan_data$Dependents[is.na(loan_data$Dependents)] <- 0
unique_dependents <- unique(loan_data$Dependents)
print(unique_dependents)
count_zero_records <- sum(loan_data$Current.Loan.Expenses..USD == 0, na.rm = TRUE)
print(count_zero_records)
loan_data$Current.Loan.Expenses..USD[(loan_data$Current.Loan.Expenses..USD) == -999.0 ] <- 0
unique_dependents <- unique(loan_data$Current.Loan.Expenses..USD)
summary(loan_data$Current.Loan.Expenses..USD)
loan_data <- loan_data[!is.na(loan_data$Current.Loan.Expenses..USD), ]
loan_data <- loan_data[!is.na(loan_data$Income..USD.), ]
loan_data <- loan_data[!is.na(loan_data$Has.Active.Credit.Card), ]
View(loan_data)
#NA Values
count_total <- nrow(loan_data)
print(count_total)
count_na <- sum(is.na(loan_data))
print(count_na)
pct_na <- count_na / count_total
print(pct_na)
#Na Values per columns
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
table(loan_data$Has.Active.Credit.Card)
table(loan_data$Co.Applicant)
filtered_df <- loan_data[loan_data$Co.Applicant %in% c(-999, 0), ]
View(filtered_df)
summary(loan_data[loan_data$Has.Active.Credit.Card == "Unpossessed", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Active", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Inactive", "Loan.Sanction.Amount..USD."])
summary(loan_data[is.na(loan_data$Has.Active.Credit.Card), "Loan.Sanction.Amount..USD."])
#Loading the data
loan_data <- read.csv('credit_amount.csv')
View(loan_data)
# Summary
str(loan_data)
summary(loan_data)
# Missing values
colSums(is.na(loan_data))
# Duplicates
duplicates <- loan_data[duplicated(loan_data), ]
print(duplicates)
#NA Values
count_total <- nrow(loan_data)
count_na <- sum(is.na(loan_data))
pct_na <- count_na / count_total
print(count_total)
print(count_na)
print(pct_na)
#Na Values per columns------------------------------------------------------
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
# Count columns with continuous variables
num_continuous <- sum(sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20))
# Count columns with categorical variables
num_categorical <- sum(sapply(loan_data, function(x) is.factor(x) || is.character(x) || (is.numeric(x) && length(unique(x)) <= 20)))
cat("Number of Continuous Columns:", num_continuous, "\n")
cat("Number of Categorical Columns:", num_categorical, "\n")
#Unique Values, Categorical Vars------------------------------------------------------
# columns with categorical variables
categorical_columns <- loan_data[, sapply(loan_data, function(x) is.factor(x) || is.character(x) || (is.numeric(x) && length(unique(x)) < 20))]
# Get unique values for these columns
unique_values <- lapply(categorical_columns, function(x) list(unique_values = unique(x)))
names(unique_values) <- names(categorical_columns)
# Print
for (col in names(unique_values)) {
cat("\nColumn:", col, "\n")
print(unique_values[[col]])
}
#Column Labels, Continuous Vars------------------------------------------------------
# Get names of continuous columns (numeric with > 20 unique values)
continuous_columns_labels <- names(loan_data)[sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20)]
# Print only the labels
print(continuous_columns_labels)
loan_data$Dependents[is.na(loan_data$Dependents)] <- 0
unique_dependents <- unique(loan_data$Dependents)
print(unique_dependents)
count_zero_records <- sum(loan_data$Current.Loan.Expenses..USD == 0, na.rm = TRUE)
print(count_zero_records)
loan_data$Current.Loan.Expenses..USD[(loan_data$Current.Loan.Expenses..USD) == -999.0 ] <- 0
unique_dependents <- unique(loan_data$Current.Loan.Expenses..USD)
summary(loan_data$Current.Loan.Expenses..USD)
summary(loan_data[loan_data$Has.Active.Credit.Card == "Unpossessed", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Active", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Inactive", "Loan.Sanction.Amount..USD."])
summary(loan_data[is.na(loan_data$Has.Active.Credit.Card), "Loan.Sanction.Amount..USD."])
loan_data$Has.Active.Credit.Card[is.na(loan_data$Has.Active.Credit.Card)] <- "Unknown"
#Unique Values, Categorical Vars------------------------------------------------------
# columns with categorical variables
categorical_columns <- loan_data[, sapply(loan_data, function(x) is.factor(x) || is.character(x) || (is.numeric(x) && length(unique(x)) < 20))]
# Get unique values for these columns
unique_values <- lapply(categorical_columns, function(x) list(unique_values = unique(x)))
names(unique_values) <- names(categorical_columns)
# Print
for (col in names(unique_values)) {
cat("\nColumn:", col, "\n")
print(unique_values[[col]])
}
summary(loan_data[loan_data$Income.Stability  == "Low", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Income.Stability  == "High", "Loan.Sanction.Amount..USD."])
summary(loan_data[is.na(loan_data$Income.Stability ), "Loan.Sanction.Amount..USD."])
loan_data <- loan_data[!is.na(loan_data$Income.Stability), ]
#Na Values per columns------------------------------------------------------
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
summary(loan_data[loan_data$Gender  == "M", "Gender"])
summary(loan_data[loan_data$Gender  == "F", "Gender"])
summary(loan_data[is.na(loan_data$Gender ), "Gender"])
summary(loan_data[loan_data$Gender  == "M", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Gender  == "F", "Loan.Sanction.Amount..USD."])
summary(loan_data[is.na(loan_data$Gender ), "Loan.Sanction.Amount..USD."])
loan_data <- loan_data[!is.na(loan_data$Gender), ]
#Na Values per columns------------------------------------------------------
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
#Unique Values, Categorical Vars------------------------------------------------------
# columns with categorical variables
categorical_columns <- loan_data[, sapply(loan_data, function(x) is.factor(x) || is.character(x) || (is.numeric(x) && length(unique(x)) < 20))]
# Get unique values for these columns
unique_values <- lapply(categorical_columns, function(x) list(unique_values = unique(x)))
names(unique_values) <- names(categorical_columns)
# Print
for (col in names(unique_values)) {
cat("\nColumn:", col, "\n")
print(unique_values[[col]])
}
summary(loan_data[loan_data$Co.Applicant  == 1 , "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Co.Applicant  == 0 , "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Co.Applicant  == -999, "Loan.Sanction.Amount..USD."])
filtered_df <- loan_data[loan_data$Co.Applicant == -999, ]
nrows(nrows(filtered_df))
rows_check <- nrows(filtered_df)
nrow(filtered_df)
loan_data <- loan_data[loan_data$Co.Applicant != -999, ]
View(loan_data)
# I. Data Review ===========================================================
#Loading the data
loan_data <- read.csv('credit_amount.csv')
View(loan_data)
# Summary
str(loan_data)
summary(loan_data)
# Missing values
colSums(is.na(loan_data))
# Duplicates
duplicates <- loan_data[duplicated(loan_data), ]
print(duplicates)
#NA Values
count_total <- nrow(loan_data)
count_na <- sum(is.na(loan_data))
pct_na <- count_na / count_total
print(count_total)
print(count_na)
print(pct_na)
#Na Values per columns------------------------------------------------------
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
------------------------------------------------------
#Column Data Types------------------------------------------------------
# Count columns with continuous variables
num_continuous <- sum(sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20))
#Income stability Range
summary(loan_data[loan_data$Income.Stability == "Low", "Income..USD."])
summary(loan_data[loan_data$Income.Stability == "High", "Income..USD."])
# Count columns with continuous variables
num_continuous <- sum(sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20))
# Count columns with categorical variables
num_categorical <- sum(sapply(loan_data, function(x) is.factor(x) || is.character(x) || (is.numeric(x) && length(unique(x)) <= 20)))
cat("Number of Continuous Columns:", num_continuous, "\n")
cat("Number of Categorical Columns:", num_categorical, "\n")
#Loading the data
loan_data <- read.csv('credit_amount.csv')
View(loan_data)
# Summary
str(loan_data)
summary(loan_data)
# Missing values
colSums(is.na(loan_data))
# Duplicates
duplicates <- loan_data[duplicated(loan_data), ]
print(duplicates)
#NA Values
count_total <- nrow(loan_data)
count_na <- sum(is.na(loan_data))
pct_na <- count_na / count_total
print(count_total)
print(count_na)
print(pct_na)
#Na Values per columns------------------------------------------------------
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
------------------------------------------------------
#Column Data Types------------------------------------------------------
# Count columns with continuous variables
num_continuous <- sum(sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20))
#Column Data Types------------------------------------------------------
# Count columns with continuous variables
num_continuous <- sum(sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20))
# Count columns with categorical variables
num_categorical <- sum(sapply(loan_data, function(x) is.factor(x) || is.character(x) || (is.numeric(x) && length(unique(x)) <= 20)))
cat("Number of Continuous Columns:", num_continuous, "\n")
cat("Number of Categorical Columns:", num_categorical, "\n")
------------------------------------------------------
#Unique Values, Categorical Vars------------------------------------------------------
# columns with categorical variables
categorical_columns <- loan_data[, sapply(loan_data, function(x) is.factor(x) || is.character(x) || (is.numeric(x) && length(unique(x)) < 20))]
categorical_columns <- loan_data[, sapply(loan_data, function(x) is.factor(x) || is.character(x) || (is.numeric(x) && length(unique(x)) < 20))]
unique_values <- lapply(categorical_columns, function(x) list(unique_values = unique(x)))
names(unique_values) <- names(categorical_columns)
# Print
for (col in names(unique_values)) {
cat("\nColumn:", col, "\n")
print(unique_values[[col]])
}
# # Dependents------------------------------------------------------
loan_data$Dependents[is.na(loan_data$Dependents)] <- 0
unique_dependents <- unique(loan_data$Dependents)
print(unique_dependents)
'''
No 0 values are present in the original data set for this column
I assume that this stands for lack of dependents
Replaced N/A with 0s
'''
loan_data$Dependents[is.na(loan_data$Dependents)] <- 0
unique_dependents <- unique(loan_data$Dependents)
print(unique_dependents)
count_zero_records <- sum(loan_data$Current.Loan.Expenses..USD. == 0, na.rm = TRUE)
print(count_zero_records)
loan_data$Current.Loan.Expenses..USD[(loan_data$Current.Loan.Expenses..USD) == -999.0 ] <- 0
unique_dependents <- unique(loan_data$Current.Loan.Expenses..USD)
summary(loan_data$Current.Loan.Expenses..USD)
summary(loan_data[loan_data$Has.Active.Credit.Card == "Unpossessed", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Active", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Has.Active.Credit.Card == "Inactive", "Loan.Sanction.Amount..USD."])
summary(loan_data[is.na(loan_data$Has.Active.Credit.Card), "Loan.Sanction.Amount..USD."])
loan_data$Has.Active.Credit.Card[is.na(loan_data$Has.Active.Credit.Card)] <- "Unknown"
summary(loan_data[loan_data$Income.Stability  == "Low", "Loan.Sanction.Amount..USD."])
summary(loan_data[loan_data$Income.Stability  == "High", "Loan.Sanction.Amount..USD."])
summary(loan_data[is.na(loan_data$Income.Stability ), "Loan.Sanction.Amount..USD."])
loan_data <- loan_data[!is.na(loan_data$Income.Stability), ]
loan_data <- loan_data[!is.na(loan_data$Gender), ]
loan_data <- loan_data[loan_data$Co.Applicant != -999, ]
View(loan_data)
loan_data$Current.Loan.Expenses..USD <- NULL
count_zero_records <- sum(loan_data$Current.Loan.Expenses..USD. == 0, na.rm = TRUE)
print(count_zero_records)
loan_data$Current.Loan.Expenses..USD[(loan_data$Current.Loan.Expenses..USD.) == -999.0 ] <- 0
unique_dependents <- unique(loan_data$Current.Loan.Expenses..USD.)
summary(loan_data$Current.Loan.Expenses..USD.)
View(loan_data)
loan_data$Current.Loan.Expenses..USD <- NULL
loan_data$Has.Active.Credit.Card[is.na(loan_data$Has.Active.Credit.Card)] <- "Unknown"
loan_data <- read.csv('credit_amount.csv')
loan_data$Dependents[is.na(loan_data$Dependents)] <- 0
unique_dependents <- unique(loan_data$Dependents)
print(unique_dependents)
count_zero_records <- sum(loan_data$Current.Loan.Expenses..USD. == 0, na.rm = TRUE)
print(count_zero_records)
loan_data$Current.Loan.Expenses..USD[(loan_data$Current.Loan.Expenses..USD.) == -999.0 ] <- 0
unique_dependents <- unique(loan_data$Current.Loan.Expenses..USD.)
summary(loan_data$Current.Loan.Expenses..USD.)
loan_data$Has.Active.Credit.Card[is.na(loan_data$Has.Active.Credit.Card)] <- "Unknown"
loan_data <- loan_data[!is.na(loan_data$Income.Stability), ]
loan_data <- loan_data[!is.na(loan_data$Gender), ]
loan_data <- loan_data[loan_data$Co.Applicant != -999, ]
View(loan_data)
loan_data <- subset(loan_data, select = -Current.Loan.Expenses..USD)
View(loan_data)
#Na Values per columns------------------------------------------------------
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
install.packages("mice")
library(mice)
md.pattern(loan_data)
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
md.pattern(loan_data)
library(cli)
install.packages("cli")
remove.packages("cli")
install.packages("cli")
library(mice)
md.pattern(loan_data)
md.pattern(loan_data)
# I. Data Review ===========================================================
#Loading the data
loan_data <- read.csv('credit_amount.csv')
View(loan_data)
# Summary
str(loan_data)
summary(loan_data)
# Missing values
colSums(is.na(loan_data))
# Duplicates
duplicates <- loan_data[duplicated(loan_data), ]
print(duplicates)
#NA Values
count_total <- nrow(loan_data)
count_na <- sum(is.na(loan_data))
pct_na <- count_na / count_total
print(count_total)
print(count_na)
print(pct_na)
#Na Values per columns------------------------------------------------------
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
------------------------------------------------------
#Column Data Types------------------------------------------------------
# Count columns with continuous variables
num_continuous <- sum(sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20))
# I. Data Review ===========================================================
#Loading the data
loan_data <- read.csv('credit_amount.csv')
View(loan_data)
# Summary
str(loan_data)
summary(loan_data)
# Missing values
colSums(is.na(loan_data))
# Duplicates
duplicates <- loan_data[duplicated(loan_data), ]
print(duplicates)
#NA Values
count_total <- nrow(loan_data)
count_na <- sum(is.na(loan_data))
pct_na <- count_na / count_total
print(count_total)
print(count_na)
print(pct_na)
#Na Values per columns------------------------------------------------------
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
------------------------------------------------------
#Column Data Types------------------------------------------------------
# Count columns with continuous variables
num_continuous <- sum(sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20))
# I. Data Review ===========================================================
#Loading the data
loan_data <- read.csv('credit_amount.csv')
View(loan_data)
# Summary
str(loan_data)
summary(loan_data)
# Missing values
colSums(is.na(loan_data))
# Duplicates
duplicates <- loan_data[duplicated(loan_data), ]
print(duplicates)
#NA Values
count_total <- nrow(loan_data)
count_na <- sum(is.na(loan_data))
pct_na <- count_na / count_total
print(count_total)
print(count_na)
print(pct_na)
#Na Values per columns------------------------------------------------------
na_percentage <- colSums(is.na(loan_data)) / nrow(loan_data) * 100
na_summary <- data.frame(
Column = names(na_percentage),
NA_Percentage = na_percentage
)
print(na_summary)
------------------------------------------------------
#Column Data Types------------------------------------------------------
# Count columns with continuous variables
num_continuous <- sum(sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20))
continuous_columns_labels <- names(loan_data)[sapply(loan_data, function(x) is.numeric(x) && length(unique(x)) > 20)]
print(continuous_columns_labels)
# # Dependents------------------------------------------------------
loan_data$Dependents[is.na(loan_data$Dependents)] <- 0
unique_dependents <- unique(loan_data$Dependents)
print(unique_dependents)
'''
No 0 values are present in the original data set for this column
I assume that this stands for lack of dependents
Replaced N/A with 0s
'''
loan_data$Dependents[is.na(loan_data$Dependents)] <- 0
unique_dependents <- unique(loan_data$Dependents)
print(unique_dependents)
count_zero_records <- sum(loan_data$Current.Loan.Expenses..USD. == 0, na.rm = TRUE)
print(count_zero_records)
loan_data$Current.Loan.Expenses..USD.[(loan_data$Current.Loan.Expenses..USD.) == -999.0 ] <- 0
unique_dependents <- unique(loan_data$Current.Loan.Expenses..USD.)
summary(loan_data$Current.Loan.Expenses..USD.)
loan_data$Has.Active.Credit.Card[is.na(loan_data$Has.Active.Credit.Card)] <- "Unknown"
loan_data <- loan_data[!is.na(loan_data$Income.Stability), ]
loan_data <- loan_data[!is.na(loan_data$Gender), ]
loan_data <- loan_data[loan_data$Co.Applicant != -999, ]
library(mice)
md.pattern(loan_data)
